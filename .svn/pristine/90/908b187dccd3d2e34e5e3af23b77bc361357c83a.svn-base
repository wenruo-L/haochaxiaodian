// pages/own_buy/own_buy.js
import config from "../../utils/config.js"
import utils from "../../utils/util.js"
let app = getApp();
Page({

  /**
   * 页面的初始数据
   */
  data: {
    indicatorDots: true,
    autoplay: true,
    interval: 2000,
    duration: 1000,
    goodid:"",
    token:"",
    produceTime:"",
    good_detail:"",
    imgUrls: [ ],
    years:"",
    price:"",
    notlike: null,
    like: null,
    shopId: "",
    productId: "",
    commission: null, //佣金！
    goodimg: "",
    goodnames: "",
    collage:"0",
    shangpinIds:"",
    options:"",
    userid:"",
    showModal: true,  
    testNum: 0,
    share__enter: true,
    userShareProductId:""
  },
  toindex: function () {
    console.log(111)
    wx.switchTab({
      url: '../index/index',
      success: function (res) { },
      fail: function (res) { },
      complete: function (res) { },
    })
  },
  to_buy_alone:function(e){
    console.log("商品详情点击事件",e)
    wx.navigateTo({
      url: '../buy_alone/buy_alone?goodid=' + e.currentTarget.dataset.goodid,
    })
  },
  // 收藏商品
  collect: function (e) {
    console.log(e)
    var that = this;
    that.setData({
      notlike: true,
      like: false
    })
    wx.request({
      url: config.collect_good,
      method: 'POST',
      data: {
        shopId: that.data.shopId,
        productId: that.data.productId,
        operate: 0
      },
      header: {
        'Content-Type': 'application/x-www-form-urlencoded',// POST的请求方式不一样 
        Authorization: that.data.token
      },
      success: function (res) {
        console.log("收藏成功！！！", res)
        wx.showToast({
          title: '收藏成功！',
          icon: 'success',
          duration: 1500
        })
      }
    })
  },
  // 取消收藏
  cancel_collect: function (e) {
    var that = this;
    that.setData({
      notlike: false,
      like: true
    })
    wx.request({
      url: config.collect_good,
      method: 'POST',
      data: {
        shopId: that.data.shopId,
        productId: that.data.productId,
        operate: 1
      },
      header: {
        'Content-Type': 'application/x-www-form-urlencoded',// POST的请求方式不一样 
        Authorization: that.data.token
      },
      success: function (res) {
        console.log("取消收藏", res)
        wx.showToast({
          title: '不要人家了嘛QAQ',
          icon: 'none',
          duration: 1500
        })
      }
    })
  },
  // 获取商品的数据
  get_good_data:function(){
    var that = this;
    var _token = wx.getStorageSync('token')
    that.setData({
      token: _token
    })
    wx.showLoading({
      title: '加载中',
    })
    // console.log("=========userShareProductId====", that.data.userShareProductId)
    wx.request({
      url: config.goods_detail,
      method: 'GET',
      data: {
        id: that.data.goodid,
        userShareProductId: that.data.userShareProductId,
        collage: that.data.collage
      },
      header: {
        'content-type': 'application/json',// GEt的请求方式为默认 
        Authorization: that.data.token
      },
      success:function(res){
        wx.hideLoading()
        if (res.data.code != 0) {
          wx.hideLoading()
          console.log(res)
          var errmsg = res.data.msg
          wx.showToast({
            title: errmsg,
            icon: "none"
          })
          setTimeout(function () {
            wx.navigateBack({
              delta: 1,
            })
          }, 800)
        }
        console.log("成功拿回商品详情数据",res)
        console.log(res.data.data.product)
        console.log(res.data.data.product.produceTime)
        // utils.timestampToTime(res.data.data.product.produceTime)
        var dianpuid = res.data.data.product.shopId
        var produceTimes = res.data.data.product.produceTime
        var year = new Date(parseInt(res.data.data.product.produceTime)).getFullYear();
        var price_list = res.data.data.productSkuList
        var priceArr = []
        var good_id = []
        var commission_num = []
        var inProvinceFreight_num = []
        if (res.data.data.product.isLike == 1) {
          that.setData({
            notlike: true,
            like: false
          })
        }
        if (res.data.data.product.isLike == 0) {
          that.setData({
            notlike: false,
            like: true
          })
        }
        price_list.forEach((el,index)=>{
          console.log(el)
          priceArr.push(el.price/100)
        })
        price_list.forEach((el, index) => {
          good_id.push(el.productId)
        })
        price_list.forEach((el, index) => {
          commission_num.push(el.commission)
        })
        price_list.forEach((el, index) => {
          inProvinceFreight_num.push(el.inProvinceFreight)
        })
        console.log(year)
        console.log(produceTimes)
        var goodname = res.data.data.product.title
        var shareGoodImg = res.data.data.productMainImageList["0"].path
        var shangpinId = res.data.data.product.id
        that.setData({
           own_buy_top_data:res.data.data.product,//单买顶部的数据
           imgUrls: res.data.data.productMainImageList,//商品轮播图
           good_detail: res.data.data.productDetailImageList,//商品参数
           years:year,
           price: priceArr,
           shopId: dianpuid,
           productId: good_id,
           commission: commission_num,
           inProvinceFreight: inProvinceFreight_num,
           goodimg: shareGoodImg,
           goodnames: goodname,
           shangpinIds: shangpinId
        })
      }
    })
  },
  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options){
    var that = this;
    that.get_token()
    //正常进入商品页的id
    if (options.id){
      that.setData({
        goodid: options.id
      })
    }
    //再次购买进入的商品页的id
    if (options.productid) {
      that.setData({
        goodid: options.productid
      })
    }
    // console.log("====================options.scene",options.scene)
    if (options.scene) {

      var scene = decodeURIComponent(options.scene);
      console.log("====================options.scene",scene)
      // var judgeScene= scene.substring(0,2)
      if (scene.substring(0, 2) == "1=") {
        var productId = scene.substring(2);
        // console.log("我进来了")
        that.setData({
          goodid: productId,
          share__enter:false
        })
      }
      if (scene.substring(0, 3)=="11="){
        var productId = scene.substring(3);
        // console.log("我进来了")
        that.setData({
          userShareProductId: productId,
          share__enter: false
        })
      }
      // console.log("judgeScene",judgeScene)
      // console.log("=====================scene", scene)

      // console.log("==========userShareProductId",that.data.userShareProductId)
    }
    //分享进入的id
    if (options.shangpin) {
      that.setData({
        goodid: options.shangpin,
        share__enter: false
      })
      

      // if (that.data.token == "") {
      //   utils.get_token;

      //   var i = setInterval(function () {
      //     if (that.data.token) {
      //       var _token = wx.getStorageSync('token')
      //       that.setData({
      //         token: _token
      //       })
      //       clearInterval(i);
      //       that.get_good_data()
      //     }
      //   }, 1000)
      //   wx.hideLoading()
      // } 
    }
            

    var op = options
    var msgg = JSON.stringify(op)
    that.setData({
      options: msgg
    })

    // if (options.shangpin) {
    //   wx.showLoading({
    //     title: '正在加载！！',
    //   })
    //   that.setData({
    //     goodid: options.shangpin
    //   })

    //   if (that.data.token == "") {
    //     utils.get_token;

    //     var i = setInterval(function () {
    //       if (that.data.token) {
    //         var _token = wx.getStorageSync('token')
    //         that.setData({
    //           token: _token
    //         })
    //         clearInterval(i);
    //         this.get_good_data()
    //       }
    //     }, 1000)
    //     wx.hideLoading()
    //   } 

    // }
    

    
    // console.log("商品id",that.data.goodid)
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
    var that = this;
    wx.showLoading({
      title: '加载中',
    })
    if (that.data.token == "") {
      utils.get_token();

      var i = setInterval(function () {
        that.setData({
          testNum: that.data.testNum++
        })
        var _token = wx.getStorageSync('token')
        if (_token) {
          that.setData({
            token: _token
          })
          clearInterval(i);

          setTimeout(function () {
            that.get_good_data()
          }, 500)
        }
      }, 1000)
    } else {
      wx.hideLoading()
      setTimeout(function(){
        that.get_good_data()
      },500)
    }
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
    // console.log(this.data.goodid)
    var that =this
    that.get_good_data()
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {
  
  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {
  
  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {
  
  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {
  
  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function (res) {
    var that = this
    var userids = wx.getStorageSync('uid')
    that.setData({
      userid: userids,
    })
    console.log("点击分享按钮", res)
    if (res.from === 'button') {

      return {
        title: '我推荐' + that.data.goodnames + '给您！',
        path: '/pages/own_buy/own_buy?shangpin=' + that.data.shangpinIds + "&shangpu=" + that.data.shopId + "&fenxiangzhe=" + that.data.userid,
        imageUrl: that.data.goodimg,



        success: function (res) {
          // 转发成功
          wx.showToast({
            title: '转发成功！',
            icon: 'success'
          })
          console.log("转发成功:" + JSON.stringify(res));
        },
        fail: function (res) {
          // 转发失败
          console.log("转发失败:" + JSON.stringify(res));
        }
      }


    }
  },
  getUserInfo: function (res) {
    let that = this;
    console.log(res)
    that.setData({
      showModal: true,
    })
    console.log("=======================1")
    var _encryptedData = res.detail.encryptedData
    var _iv = res.detail.iv
    var sessionIds = wx.getStorageSync("local_session")
    console.log("=======================1:sessionIds=", sessionIds)
    // console.log("=======================2:sessionId=", wx.getStorageSync("local_session"))
    wx.request({
      url: config.get_token_id,
      method: 'POST',
      data: {
        sessionId: sessionIds,
        encryptedData: _encryptedData,
        iv: _iv
      },
      header: {
        'Content-Type': 'application/x-www-form-urlencoded' // POST的请求方式不一样 
        // 'Authorization': 'jwttoken'
      },
      success: function (res) {
        console.log(res)
        console.log('能否拿到jwtToken' + res.data.data.jwtToken)
        console.log('能否拿到userId' + res.data.data.userId)
        var _jwtToken = res.data.data.jwtToken
        var _userId = res.data.data.userId
        wx.setStorageSync('token', res.data.data.jwtToken)//存在本地的token
        wx.setStorageSync('uid', res.data.data.userId)//存在本地的用户id               
        that.setData({
          token: _jwtToken
        })
        that.get_good_data()

      },
    })

  },
  // 属于搜索首页的获取token方法
  get_token: function () {
    console.log("我是拿token的")
    var that = this

    // ============================================
    // // 登录
    wx.login({
      success: res => {
        console.log(res)
        console.log(res.code)
        var _code = res.code
        if (res.code) {
          console.log(_code)
          //发起网络请求  

          wx.request({
            url: config.get3rdsession,
            method: 'GET',
            data: {
              code: _code
            },
            header: {
              'content-type': 'application/json' // GEt的请求方式为默认 
              // 'Authorization': 'jwttoken'
            },
            success: function (e) {
              console.log(e)
              var backstage = e.data.code
              // app.globalData.back_stage_code = backstage;
              var _thirdSession = e.data.data.thirdSession
              // that.setData({ _thirdSessions: _thirdSession})
              wx.setStorageSync("local_session", e.data.data.thirdSession)
              console.log("我是拿session的")
              console.log("这个就是session啊啊", _thirdSession)
              // 获取用户信息
              wx.getSetting({
                success: res => {
                  if (!res.authSetting['scope.userInfo']) {
                    that.setData({
                      showModal: false
                    })
                  }
                }
              })

              wx.getUserInfo({
                success: function (res) {
                  console.log("111111")
                  console.log("aaaaaaaaaaaaaaaaaaaaaaaa",res)
                  console.log('能否拿到encryptedData' + res.encryptedData)
                  console.log('能否拿到iv ' + res.iv)
                  var _encryptedData = res.encryptedData
                  var _iv = res.iv
                  console.log('能否拿到_thirdSession' + _thirdSession)
                  wx.request({
                    url: config.get_token_id,
                    method: 'POST',
                    data: {
                      sessionId: _thirdSession,
                      encryptedData: _encryptedData,
                      iv: _iv
                    },
                    header: {
                      'Content-Type': 'application/x-www-form-urlencoded' // POST的请求方式不一样 
                      // 'Authorization': 'jwttoken'
                    },
                    success: function (res) {
                      console.log(res)
                      console.log('能否拿到jwtToken' + res.data.data.jwtToken)
                      console.log('能否拿到userId' + res.data.data.userId)
                      var _jwtToken = res.data.data.jwtToken
                      var _userId = res.data.data.userId
                      wx.setStorageSync('token', res.data.data.jwtToken)//存在本地的token
                      wx.setStorageSync('uid', res.data.data.userId)//存在本地的用户id                                               
                    },
                    fail: function (res) {

                    }
                  })
                }
              })


            }
          })
        } else {

        }
      }
    })
  },
})